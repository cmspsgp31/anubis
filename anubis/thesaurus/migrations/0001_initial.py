# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-06 21:12
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Edge',
                'verbose_name_plural': 'Edges',
            },
        ),
        migrations.CreateModel(
            name='FacetIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Facet Indicator',
                'verbose_name_plural': 'Facet Indicators',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(unique=True, verbose_name='Term')),
                ('apps', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, size=None, verbose_name='App availability')),
                ('children', models.ManyToManyField(related_name='parents', through='thesaurus.Edge', to='thesaurus.Node', verbose_name='Child terms')),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, verbose_name='Note title')),
                ('contents', models.TextField(verbose_name='Note contents')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='thesaurus.Node', verbose_name='Term')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='Thesaurus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Thesaurus',
                'verbose_name_plural': 'Thesauri',
            },
        ),
        migrations.AddField(
            model_name='node',
            name='thesaurus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='thesaurus.Thesaurus', verbose_name='Thesaurus'),
        ),
        migrations.AddField(
            model_name='facetindicator',
            name='for_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facet_indicators', to='thesaurus.Node', verbose_name='Term'),
        ),
        migrations.AddField(
            model_name='edge',
            name='end_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_edges', to='thesaurus.Node', verbose_name='Child term'),
        ),
        migrations.AddField(
            model_name='edge',
            name='facet',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_edges', to='thesaurus.FacetIndicator', verbose_name='Facet indicator'),
        ),
        migrations.AddField(
            model_name='edge',
            name='start_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_edges', to='thesaurus.Node', verbose_name='Parent term'),
        ),
    ]
