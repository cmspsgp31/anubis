# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-13 14:25
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Correlation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_modified_at', models.DateTimeField(auto_now=True, verbose_name='last modified at')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_correlation_objects', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'correlation',
                'verbose_name_plural': 'correlations',
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('correlation_init', models.CharField(default='RT', max_length=20, verbose_name='initials for correlated terms')),
                ('edge_start_init', models.CharField(default='GT', max_length=20, verbose_name='initials for generic terms')),
                ('edge_end_init', models.CharField(default='ST', max_length=20, verbose_name='initials for specific terms')),
            ],
            options={
                'verbose_name': 'dimension',
                'verbose_name_plural': 'dimensions',
            },
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_modified_at', models.DateTimeField(auto_now=True, verbose_name='last modified at')),
                ('ordering', models.PositiveIntegerField(blank=True, default=0)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_edge_objects', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('dimension', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edges', to='thesaurus.Dimension', verbose_name='dimension')),
            ],
            options={
                'verbose_name': 'edge',
                'verbose_name_plural': 'edges',
                'ordering': ('start_node', 'dimension', 'ordering'),
            },
        ),
        migrations.CreateModel(
            name='FacetIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.TextField(verbose_name='name')),
                ('ordering', models.PositiveIntegerField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'facet indicator',
                'verbose_name_plural': 'facet indicators',
                'ordering': ('for_node', 'ordering'),
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_modified_at', models.DateTimeField(auto_now=True, verbose_name='last modified at')),
                ('label', models.TextField(unique=True, verbose_name='term')),
                ('apps', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Comma-separated list of apps that can use this term.', size=None, verbose_name='app availability')),
                ('children', models.ManyToManyField(related_name='parents', through='thesaurus.Edge', to='thesaurus.Node', verbose_name='child terms')),
                ('correlated', models.ManyToManyField(related_name='_node_correlated_+', through='thesaurus.Correlation', to='thesaurus.Node', verbose_name='correlated terms')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_node_objects', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('last_modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_node_objects', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
            ],
            options={
                'verbose_name': 'term',
                'verbose_name_plural': 'terms',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, verbose_name='note title')),
                ('contents', models.TextField(verbose_name='note contents')),
                ('ordering', models.PositiveIntegerField(blank=True, default=0)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='thesaurus.Node', verbose_name='term')),
            ],
            options={
                'verbose_name': 'note',
                'verbose_name_plural': 'notes',
                'ordering': ['node', 'ordering'],
            },
        ),
        migrations.CreateModel(
            name='Thesaurus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
            ],
            options={
                'verbose_name': 'thesaurus',
                'verbose_name_plural': 'thesauri',
            },
        ),
        migrations.CreateModel(
            name='UsedFor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_modified_at', models.DateTimeField(auto_now=True, verbose_name='last modified at')),
                ('allowed_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowances', to='thesaurus.Node')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_usedfor_objects', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('last_modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_usedfor_objects', to=settings.AUTH_USER_MODEL, verbose_name='last modified by')),
                ('verbotten_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prohibition', to='thesaurus.Node', unique=True, verbose_name='used for')),
            ],
            options={
                'verbose_name': 'equivalence',
                'verbose_name_plural': 'equivalences',
            },
        ),
        migrations.AddField(
            model_name='node',
            name='thesaurus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='thesaurus.Thesaurus', verbose_name='thesaurus'),
        ),
        migrations.AddField(
            model_name='node',
            name='used_for',
            field=models.ManyToManyField(related_name='should_use', through='thesaurus.UsedFor', to='thesaurus.Node', verbose_name='used for'),
        ),
        migrations.AddField(
            model_name='facetindicator',
            name='for_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facet_indicators', to='thesaurus.Node', verbose_name='term'),
        ),
        migrations.AddField(
            model_name='edge',
            name='end_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_edges', to='thesaurus.Node', verbose_name='child term'),
        ),
        migrations.AddField(
            model_name='edge',
            name='facet',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='on_edges', to='thesaurus.FacetIndicator', verbose_name='facet indicator'),
        ),
        migrations.AddField(
            model_name='edge',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_edge_objects', to=settings.AUTH_USER_MODEL, verbose_name='last modified by'),
        ),
        migrations.AddField(
            model_name='edge',
            name='start_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_edges', to='thesaurus.Node', verbose_name='parent term'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='thesaurus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dimensions', to='thesaurus.Thesaurus', verbose_name='thesaurus'),
        ),
        migrations.AddField(
            model_name='correlation',
            name='dimension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='correlations', to='thesaurus.Dimension', verbose_name='dimension'),
        ),
        migrations.AddField(
            model_name='correlation',
            name='from_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correlations', to='thesaurus.Node', verbose_name='correlated term'),
        ),
        migrations.AddField(
            model_name='correlation',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_correlation_objects', to=settings.AUTH_USER_MODEL, verbose_name='last modified by'),
        ),
        migrations.AddField(
            model_name='correlation',
            name='to_node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correlations_to+', to='thesaurus.Node', verbose_name='correlated term'),
        ),
        migrations.AlterUniqueTogether(
            name='facetindicator',
            unique_together=set([('label', 'for_node')]),
        ),
        migrations.AlterUniqueTogether(
            name='edge',
            unique_together=set([('start_node', 'end_node', 'dimension')]),
        ),
    ]
