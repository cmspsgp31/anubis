{exec} = require 'child_process'
fs = require 'fs'

lastChange = {}

scripts =
	[ "csrf_backbone"
	, "main"
	, "views"
	, "router"
	, "delegates"
	, "token_view"
	]


buildDir = "build/anubis/"
appDir = "build/"
buildFile = "anubis.build.js"
built = []

compile = (input, callback) ->
	output = "#{buildDir}#{input}"
	exec "coffee -c -o #{buildDir} #{input}.coffee", (e, stdout, stderr) ->
		if e
			console.error stdout
			console.error stderr
			console.error e
			return
		console.log "Compiled #{input} to #{output}.js"
		callback input

requirejs =
	build: (command) ->
		console.log "Building from #{buildFile}..."
		exec command, cwd: appDir, (e, out, err) ->
			return console.error e if e
			console.log "Done!"

	debug: (which) ->
		built.push which

		if built.concat().sort().toString() == scripts.concat().sort().toString()
			requirejs.build "r.js -o #{buildFile} optimize=none"

	production: (which) ->
		built.push which

		if built.concat().sort().toString() == scripts.concat().sort().toString()
			requirejs.build "r.js -o #{buildFile}"

task 'debug', 'Compile coffee', ->
	compile f, requirejs.debug for f in scripts

task 'build', 'Compile coffee for production', ->
	compile f, requirejs.production for f in scripts

task 'clean', 'Clear compiled files', ->
	# exec = console.log
	exec "rm -rf #{buildDir}"
	exec "rm -rf ../static/anubis/"
